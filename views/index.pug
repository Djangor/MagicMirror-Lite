extends layout

block content
  div(class='table mml' id='currencyDiv')
    table
      thead
        tr
          th(class='symbol') Currency
          th(class='price') Exchange Rate
      tbody(id='currencyBody')
    span(id='lastUpdatedCurr' class='lastUpdate')

  div(class='table mml' id='coinDiv')
    table
      thead
        tr
          th(class='symbol') Symbol
          th(class='price') Price (EUR)
          th(class='asset') Asset
          th(class='arrow') 1h
          th(class='arrow') 24h
          th(class='arrow') 7d
      tbody(id='coinBody')
    span(id='lastUpdatedCoin' class='lastUpdate')

  div(class="col-md-5")




  script(type="text/javascript" src="/mdbootstrap/js/jquery.min.js")
  script(type="text/javascript" src="/mdbootstrap/js/popper.min.js")
  script(type="text/javascript" src="/mdbootstrap/js/bootstrap.min.js")
  script(type="text/javascript" src="/mdbootstrap/js/mdb.min.js")
  script.

    const getArrow = (direction) => {
      return '<td class="arrow-' + direction + '"><i class="fas fa-chevron-' + direction + '"></i></td>';
    }

    const formatRate = (rate) => {
      return rate < 0.01 ? rate.toString().substr(0, rate.toString().search(/[1-9]/) + 2) : rate.toFixed(3);
    }

    const loadGraph = () => {
      $.get('getAssetHistory', {}, (data) => {
        const ctxL = document.getElementById("lineChart").getContext('2d');
        const myLineChart = new Chart(ctxL, {
          type: 'line',
          data: {
            labels: data.labels,
            datasets: [{
              data: data.data,
              borderColor: ['rgba(200, 99, 132, .7)',],
              borderWidth: 2
            }]
          },
          options: {
            responsive: true,
            legend: {display: false},
            scales: {
              xAxes: [{ticks: {display: false}}],
              yAxes: [{ticks: {display: false}}]
            }
          }
        });
      });
    }

    const loadCoins = () =>  {
      $.get('loadCoins', {}, (data)  => {
        let coins = '';
        for (let i=0;i<data.rates.length;i++) {
          coins = coins + '<tr><td class="symbol">' + data.rates[i].symbol + '</td><td class="price">' + formatRate(data.rates[i].price) + '</td>';
          coins = coins + '<td class="asset">' + formatRate(data.rates[i].assetValue) + '</td>';
          const hour = data.rates[i].change1h > 0 ? 'up' : 'down';
          const day = data.rates[i].change24h > 0 ? 'up' : 'down';
          const days = data.rates[i].change7d > 0 ? 'up' : 'down';
          coins = coins + getArrow(hour) + getArrow(day) + getArrow(days);
        }
        coins = coins + '<tr><td class="assetTotal"><b>TOTAL: </b></td><td>&nbsp;</td><td class="asset"><b>' + formatRate(data.asset ? data.asset : 0) + '</b></td><td colspan="3" class="chartCell"><canvas id="lineChart"></canvas></td></tr>';
        $('#coinBody').html(coins);
        loadGraph();
        $('#lastUpdatedCoin').text('Last Update: ' + data.lastUpdate);
      })
    }

    const loadCurrencies = () => {
      $.get('loadCurrencies', {}, (data)  => {
        let currencies = '';
        for (let i = 0; i < data.rates.length; i++) {
          currencies = currencies + '<tr><td class="symbol">' + data.rates[i].currency + '</td><td class="price">' + formatRate(data.rates[i].rate) + '</td></tr>';
        }
        $('#currencyBody').html(currencies);
        $('#lastUpdatedCurr').text('Last Update: ' + data.lastUpdate);
      })
    }


    $(document).ready(function() {
      loadCoins();
      setInterval(loadCoins, 30000);
      loadCurrencies();
      setInterval(loadCurrencies, 30000);
    });
